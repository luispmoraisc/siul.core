name: Publish
description: Action to publish packages to a specified NPM registry.

inputs:
  PRE_RELEASE_IDENTIFIER:
    description: 'Pre-release identifier for the version'
    required: false
    default: 'beta'
  REGISTRY_URL:
    description: 'Registry URL'
    required: false
    default: 'https://registry.npmjs.org/'
  TOKEN:
    description: 'GitHub token for authentication'
    required: true
  IS_PRE_RELEASE:
    description: 'This is a pre-release'
    required: true
    default: 'true'

runs:
  using: 'composite'
  steps:
    - name: Publish pre-release version
      if: ${{ inputs.IS_PRE_RELEASE == 'true' }}
      env:
        NODE_AUTH_TOKEN: ${{ inputs.TOKEN }}
        GITHUB_TOKEN: ${{ inputs.TOKEN }}
      shell: bash
      run: |
        npx nx release version \
          --preid=${{ inputs.PRE_RELEASE_IDENTIFIER }} \
          --git-tag=false \
          --git-commit=true \
          --git-push=false \
          --git-commit-message="chore(release): create ${{ inputs.PRE_RELEASE_IDENTIFIER }} release"

    - name: Publish pre-release packages
      if: ${{ inputs.IS_PRE_RELEASE == 'true' }}
      env:
        NODE_AUTH_TOKEN: ${{ inputs.TOKEN }}
        GITHUB_TOKEN: ${{ inputs.TOKEN }}
      shell: bash
      run: |
        npx nx release publish \
          --registry="${{ inputs.REGISTRY_URL }}" \
          --verbose=true

    - name: Publish latest version
      if: ${{ inputs.IS_PRE_RELEASE == 'false' }}
      env:
        NODE_AUTH_TOKEN: ${{ inputs.TOKEN }}
        GITHUB_TOKEN: ${{ inputs.TOKEN }}
      shell: bash
      run: |
        # npx nx release version --git-tag=true --git-commit=true --git-commit-message="chore(release): create a new latest version" --git-push=true
        # npx nx release publish --nxBail=true --registry=${{ inputs.REGISTRY_URL }} --tag=latest
        npx nx release --yes

    - name: Push changes to PR branch
      if: ${{ github.event.pull_request.head.repo.full_name == github.repository && inputs.IS_PRE_RELEASE == 'true' }}
      shell: bash
      run: git push origin --follow-tags HEAD:${{ github.head_ref }}
