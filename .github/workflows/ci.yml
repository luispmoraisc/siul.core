name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - development

permissions:
  actions: read
  contents: write
  packages: write

env:
  NODE_VERSION: '22'
  REGISTRY_URL: 'https://npm.pkg.github.com'
  SCOPE: '@luispmoraisc'

jobs:
  # Job para validação de código
  validate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Environment
        uses: ./.github/actions/environment-setup
        with:
          NODE_VERSION: ${{ env.NODE_VERSION }}
          REGISTRY_URL: ${{ env.REGISTRY_URL }}
          SCOPE: ${{ env.SCOPE }}
          CACHE: 'yarn'
          TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run validation tasks
        run: |
          npx nx run-many -t lint --skip-nx-cache
          npx nx run-many -t test --skip-nx-cache
          npx nx run-many -t typecheck --skip-nx-cache

      - name: Build projects
        run: npx nx run-many -t build --skip-nx-cache

  # Job para release em desenvolvimento (beta)
  release-dev:
    runs-on: ubuntu-latest
    needs: validate
    if: ${{ github.event_name == 'pull_request' && github.base_ref == 'development' }}
    environment: development
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Environment
        uses: ./.github/actions/environment-setup
        with:
          NODE_VERSION: ${{ env.NODE_VERSION }}
          REGISTRY_URL: ${{ env.REGISTRY_URL }}
          SCOPE: ${{ env.SCOPE }}
          CACHE: 'yarn'
          TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish beta version
        uses: ./.github/actions/publish
        with:
          PRE_RELEASE_IDENTIFIER: 'beta'
          REGISTRY_URL: ${{ env.REGISTRY_URL }}
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
          IS_PRE_RELEASE: 'true'

  # Job para release em produção
  release-prod:
    runs-on: ubuntu-latest
    needs: validate
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    environment: production
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Environment
        uses: ./.github/actions/environment-setup
        with:
          NODE_VERSION: ${{ env.NODE_VERSION }}
          REGISTRY_URL: ${{ env.REGISTRY_URL }}
          SCOPE: ${{ env.SCOPE }}
          CACHE: 'yarn'
          TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish latest version
        uses: ./.github/actions/publish
        with:
          REGISTRY_URL: ${{ env.REGISTRY_URL }}
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
          IS_PRE_RELEASE: 'false'

      - name: Push tags and changes
        run: git push --follow-tags

  mui-storybook:
    runs-on: ubuntu-latest
    needs: release-prod
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Environment
        uses: ./.github/actions/environment-setup
        with:
          NODE_VERSION: ${{ env.NODE_VERSION }}
          REGISTRY_URL: ${{ env.REGISTRY_URL }}
          SCOPE: ${{ env.SCOPE }}
          CACHE: 'yarn'
          TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Storybook
        run: npx nx build-storybook ds-mui --skip-nx-cache

      - name: Deploy Storybook to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: packages/ds-mui/storybook-static
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_message: 'chore(storybook): update storybook [skip ci]'
          keep_files: false
          destination_dir: 'docs'
